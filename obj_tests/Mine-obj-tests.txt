Cas de test 0.1 : Test de la creation d'une mine (init) reussi

Conditions initiales : 
		aucun
	Operations : 
		L0 = init(50,50,ERACE.ORC);
	Oracle : 
		getHauteur(L0)==50
		getLargeur(L0)==50
		orRestant(L0) == 51
		abandonCompteur() == 51
		assertPerso("init, La largeur de la mine ne s'est pas initialisee correctement",  mine.appartenance() == ERace.RIEN);
	Rapport :
		getHauteur(L0)!=50
			=> init, La hauteur de la mine ne s'est pas initialisee correctement
		getLargeur(L0) != 50
			=> init, La Largeur de la mine ne s'est pas initialisee correctement
		orRestant(L0) != 51
		   => init, La Qtor de la mine ne s'est pas initialisee correctement
		abandonCompteur(L0) != 51
		   => init, L abandonCompteur de la mine ne s'est pas initialisee correctement
		appartenance(L0) != ERace.RIEN
		   => init, La Appartenance de la mine ne s'est pas initialisee correctement
		
-------------------------------------------------------------------------------------------------------------------------------
Cas de test 1.1 : Test de setAppartenance d'une mine reussi

Conditions initiales : 
		L0 = init( 50, 50);
	Operations : 
		L1 = setAppartenance(L0,ERace.ORC);
	Oracle : 
		appartenance(L1) == ERace.ORC
	Rapport :
		appartenance(L1) != ERace.ORC
			=> setAppartenance, L'appartenance de la mine n'est pas la bonne
-------------------------------------------------------------------------------------------------------------------------------
Cas de test 2.1 : Test de retrait d'une mine reussi

Conditions initiales : 
		L0 = init( 50, 50);
	Operations : 
		L1 = retrait(L0,1);
	Oracle : 
		orRestant(L1) == 50
	Rapport :
		orRestant(L1) != 50
			=> retrait, Le retrait de la mine ne s'est pas fait correctement
			
-------------------------------------------------------------------------------------------------------------------------------
Cas de test 3.1 : Test de setAbandonnedCpt d'une mines  reussi

Conditions initiales : 
		L0 = init( 50, 50);
		
		L1 = setAppartenance(L0 ,ERace.ORC);
	Operations : 
		L2 = setAbandonCompteur(L1,1);
	Oracle : 
		 abandonCompteur(L2) == 1
	Rapport :
		abandonCompteur(L2) == 1
			=> setAbandonCompteur, le setAbandonCompteur de la mine ne s'est pas fait correctement

-------------------------------------------------------------------------------------------------------------------------------
Cas de test 4.1 : Test de estAbandonne d'une mines  rÃ©ussi

Conditions initiales : 
		
	Operations : 
		L0 = init( 50, 50);
	Oracle : 
		estAbandonnee(L0) == true
	Rapport :
		abandonCompteur(L0) == true
			=> estAbandonne, estAbandonne de la mine n'est pas egal a true alors qu'il le devrait
-------------------------------------------------------------------------------------------------------------------------------

Cas de test 5.1 : Test de estLaminee d'une mines  reussi

Conditions initiales : 
		L0 = init( 50, 50);
		L1 = setAppartenance(L0 ,ERace.ORC);
	Operations : 
		L2 = retrait(L1,51);
	Oracle : 
		estLaminee(L0) == true
		
	Rapport :
		estLaminee(L0) != true
		=> estLaminee, La mine n'est pas Laminee alors qu'elle le devrait



-------------------------------------------------------------------------------------------------------------------------------
Cas de test 6.1 : Test de accueil d'une mine Positif
Conditions initiales : 
		L0 = init(50,50);
	Operations : 		
		L1=accueil(L0,ERace.HUMAIN);
	Oracle : 
		appartenance(L1) == ERace.HUMAIN
	Rapport :
		appartenance(L1) != ERace.HUMAIN
			=> accueil, L'accueil de la mine ne s'est pas faite correctement

			
			